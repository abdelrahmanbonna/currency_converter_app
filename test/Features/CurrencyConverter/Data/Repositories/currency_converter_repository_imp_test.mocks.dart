// Mocks generated by Mockito 5.4.4 from annotations
// in currency_converter_app/test/Features/CurrencyConverter/Data/Repositories/currency_converter_repository_imp_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:currency_converter_app/Features/CurrencyConverter/Data/DataSources/currency_converter_cache_data_source.dart'
    as _i6;
import 'package:currency_converter_app/Features/CurrencyConverter/Data/DataSources/currency_converter_remote_data_source.dart'
    as _i3;
import 'package:currency_converter_app/Features/CurrencyConverter/Data/Models/convert_rate_model.dart'
    as _i5;
import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CurrencyConverterRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCurrencyConverterRemoteDataSource extends _i1.Mock
    implements _i3.CurrencyConverterRemoteDataSource {
  @override
  _i4.Future<_i2.Response<dynamic>> getCurrencyConvert(
          _i5.ConvertRateModel? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrencyConvert,
          [data],
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getCurrencyConvert,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getCurrencyConvert,
            [data],
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> getHistoricalData(
          _i5.ConvertRateModel? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHistoricalData,
          [data],
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getHistoricalData,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getHistoricalData,
            [data],
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> getCurrencies() => (super.noSuchMethod(
        Invocation.method(
          #getCurrencies,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getCurrencies,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getCurrencies,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);
}

/// A class which mocks [CurrencyConverterCacheDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCurrencyConverterCacheDataSource extends _i1.Mock
    implements _i6.CurrencyConverterCacheDataSource {
  @override
  _i4.Future<_i2.Response<dynamic>> getCurrencies() => (super.noSuchMethod(
        Invocation.method(
          #getCurrencies,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getCurrencies,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getCurrencies,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> getCurrencyConvert(
          _i5.ConvertRateModel? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrencyConvert,
          [data],
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getCurrencyConvert,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getCurrencyConvert,
            [data],
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> getHistoricalData(
          _i5.ConvertRateModel? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHistoricalData,
          [data],
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getHistoricalData,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getHistoricalData,
            [data],
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<void> setCurrencyData(Map<String, dynamic>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCurrencyData,
          [data],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setCurrencyConvertData(Map<String, dynamic>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCurrencyConvertData,
          [data],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setHistoricalData(
    Map<String, dynamic>? data,
    _i5.ConvertRateModel? model,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setHistoricalData,
          [
            data,
            model,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
